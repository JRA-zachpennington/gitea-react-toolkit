name: Install, Build & Run Cypress

on: [push]
env:
  CYPRESS_DASHBOARD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}
  CYPRESS_TEST_USERNAME: ${{ secrets.CYPRESS_TEST_USERNAME }}
  CYPRESS_TEST_PASSWORD: ${{ secrets.CYPRESS_TEST_PASSWORD }}
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  CHILD_CONCURRENCY: 1
  NODE_ENV: test
jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [10.15.1]
    steps:
      - name: Extract branch name
        shell: bash
        run: echo ${GITHUB_REF##*/}
        id: extract_branch
      - uses: actions/checkout@v1
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # - name: Cache Cypress
      #   uses: actions/cache@v1
      #   id: cypress_cache
      #   with:
      #     path: ~/.cache/Cypress
      #     key: ${{ runner.os }}-cypress-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-cypress-
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn;
      - name: Run Tests
        run: yarn test;
      - name: Send Coverage
        run: |
          yarn unit:cov
          yarn cypress:cov
      - name: Create Badge For Coverage Results
        run: yarn create-coverage-badge;
      - name: Commit Coverage Results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add coverage/shields.json -f
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACTIONS_TOKEN }}
          force: true
          branch: ${{ steps.extract_branch.outputs.branch }}
